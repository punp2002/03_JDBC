package edu.kh.jdbc;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class JDBCExample1 {
	
	public static void main(String[] args) {
		
		/*
		 * JDBC (Java DateBase Connectivity)
		 * 
		 * - Java에서 DB에 연결 할 수 있게 해주는
		 * 	Java API (Java에서 제공하는 코드)
		 * -> java.spl 패키지에 존재함
		 * 
		 * */
		
		// Java코드를 이용해서
		// EMPLOYEE 테이블에서
		// 사번, 이름, 부서코드, 직급코드, 급여, 입사일 조회 후 
		// 이클립스 콘솔에 출력
		
		/* 1. JDBC 객체 참조용 변수 선언 */
		
		// java.spl.Connection
		// 특정 DBMS와 연결하기 위한 정보를 저장한 객체
		// ==DBeaver 에서 사용하는 DB연결과 같은 역할의 객체
		// (DB 서버주소, 포트번호, DB 이름, 계정명, 비밀번호)
		Connection conn = null;
		
		// java.spl.Statement
		// - 1) SQL을 Java -> DB에 전달
		// - 2) DB에서 SQL 수행한 결과를 반환 받아옴( DB -> Java )
		Statement stmt = null;
		
		// java.spl.ResultSet
		// - SELECT 조회 결과를 저장하는 객체
		ResultSet rs = null;
		
		try {
			/* 2. DriverManager 객체를 이용해서 Connection 객체 생성하기 */
			// java.sql.DriverManager
			// - DB 연결 정보와 JDBC 드라이버를 이용해서
			//	원하는 DB와 연결할 수 있는 Connection 객체를 생성하는 객체
			
			// 2-1) Oracle JDBC Driver 객체를 메모리에 로드하기
			Class.forName("oracle.jdbc.driver.OracleDriver");
			// Class.forName("패키지명 + 클래스명");
			// - 해당 클레스를 읽어서 메모리에 적재
			// -> JVM이 프로그램 동작에 사용할 객체를 생성하는 구문
			
			// oracle.jdbc.driver.OracleDriver
			// - Oracle DBMS 연결 시 필요한 코드가 담겨있는 클래스
			//	 ojdbc 라이브러리 파일 내 존재함.
			//	 Oracle에서 만들어서 제공하는 클래스
			
			// 2-2) DB 연결 정보 작성
			String type = "jdbc:oracle:thin:@"; // 드라이버의 종류
			
			String host = "localhost"; // DB서버 컴퓨터의 IP 또는 도메인 주소
										// localhost == 현재 컴퓨터
			
			String port = ":1521"; // 프로그램 연결을 위한 port 번호
			
			String dbName = ":XE"; // DBMS 이름 (XE == eXpress Edition)
			
			// jdbc:oracle:thin:@localhost:1521:XE
			
			String userName = "kh";		// 사용자 계정명
			String password = "kh1234"; // 계정 비밀번호
			
			// 2-3) DB 연결 정보와 DriverManager 를 이용해서 Connection 객체 생성
			conn = DriverManager.getConnection(type+host+port+dbName, 
												userName, 
												password);
			
			// Connection 객체가 잘 생성되었는지 확인(객체 주소 반환)
			System.out.println(conn);
			
			
		} catch (ClassNotFoundException e) {
			System.out.println("해당 class를 찾을 수 없습니다.");
			e.printStackTrace();
			
		} catch (SQLException e) {
			// SQLException : DB 연결과 관련된 모든 예외의 최상위 부모
			e.printStackTrace();
		}
		
		
		
		
		
		
		
	}

}
